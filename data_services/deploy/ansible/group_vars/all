---
# defaults file for geonode

# app_name should be a shorthand, lowercase, no spaces version of the
# application name since this variable will be used as a directory name
# Also, it would be the name of the branch in the worldmap repo.
# For example worldmap, my_geonode, master, feature1.
app_name: geonode

# github user who owns the repository
github_user: GeoNode

# version
app_version: master

# remote git repository to pull application code from, for example:
code_repository: "https://github.com/{{ github_user }}/{{ app_name }}.git"

# TODO: Allow for branch name

# Server name for nginx.
# TODO: Production IP address
server_name: localhost:8080

# geoserver url
geoserver_root_url: http://localhost:8080/geoserver

# geoserver rest endpoint
geoserver_rest: "{{ geoserver_root_url }}/rest"

# geonode workspace (probably shouldn't change this)
geonode_workspace: geonode

db_data_instance: "{{ app_name }}"
db_metadata_instance: "{{ app_name }}_app"
db_password: "{{ app_name }}"
db_user: "{{ app_name }}"

# Django settings module to use when running Manage commands
# for example, txt2react.settings
main_module: "{{ app_name }}"

# name of the user created by the Fabric script that Ansible will use to
# handle server tasks
deploy_user: vagrant

# server directory for the virtualenv that will be created to run the web app
virtualenv_dir: /home/{{deploy_user}}/venvs

# server directory to put the code into that is pulled from the code
# repository
app_code_dir: /home/{{deploy_user}}

# location of the requirements.txt flie in the code
requirements_file: "{{app_code_dir}}/requirements.txt"

# root domain name the server should run as. do not include a subdomain,
# for example, txt2react.com
site_url: "http://192.168.33.12/"

ssh_dir: ~/.ssh/

geoserver_url: http://build.geonode.org/geoserver/latest/geoserver.war

# geoserver admin user
geoserver_user: admin
geoserver_password: geoserver

# geonode admin user
geonode_admin_user: admin
geonode_admin_email: "{{ geonode_admin_user }}@geonode.com"
geonode_admin_password: geonode

# install path for geonodegp
geonodegp_root: /home/vagrant/geonodegp

# local_settings fragments path
geonodegp_settings: "{{geonodegp_root}}/fragments/settings"

# tasks fragments path
geonodegp_tasks: "{{geonodegp_root}}/fragments/tasks"

# path to data processing scripts
data_queues_root: "{{geonodegp_root}}/geonodegp/data_queues"
